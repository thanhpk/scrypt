{"version":3,"sources":["../lib/smix.js","../lib/pbkdf2.js","../src/WorkerChild.ts","../src/WorkerMain.ts"],"names":["asm_smix","create","buffer","asm","self","getHeap","global","env","HEAP32","Int32Array","Math_imul","Math","imul","HEAP8","Int8Array","HEAPU8","Uint8Array","_SMix","$0","$1","$2","$3","$4","$5","$6","$$0108","$$0108$us","$$016$i","$$016$i100","$$016$i93","$$016$i96","$$091109","$$1113","$$1113$us","$$192111","$11","$14","$15","$16","$17","$19","$25","$45","$46","$48","$53","$58","$59","$69","$7","$72","$79","$8","$82","$9","$91","$93","L3","_blockmix_salsa8","$$016081639","$$016091638","$$016101637","$$016111636","$$016121635","$$016131634","$$016141633","$$016151632","$$016161631","$$016171630","$$016181629","$$016191628","$$016201627","$$016211626","$$016221625","$$016231624","$$01640","$1000","$1001","$1005","$1006","$1010","$1011","$1015","$1016","$1020","$1021","$1025","$1026","$103","$1030","$1031","$1035","$1036","$104","$1040","$1041","$1045","$1046","$1050","$1051","$1055","$1056","$1060","$1061","$1065","$1066","$1070","$1071","$1075","$1076","$108","$1080","$1081","$1085","$1086","$109","$1090","$1091","$1095","$1096","$1100","$1101","$1105","$1106","$1110","$1111","$1115","$1116","$1120","$1121","$1125","$1126","$113","$1130","$1131","$1135","$1136","$114","$1140","$1141","$1145","$1146","$1150","$1151","$1155","$1156","$1160","$1161","$1165","$1166","$1170","$1171","$1175","$1176","$118","$1180","$1181","$1185","$1186","$119","$1190","$1191","$1195","$1196","$1200","$1201","$1205","$1206","$1210","$1211","$1215","$1216","$1220","$1221","$1225","$1226","$123","$1230","$1231","$1235","$1236","$124","$1240","$1241","$1245","$1246","$1250","$1251","$1255","$1256","$1260","$1261","$1265","$1266","$1270","$1271","$1275","$1276","$128","$1280","$1281","$1285","$1286","$129","$1290","$1291","$1295","$1296","$1300","$1301","$1305","$1306","$1310","$1311","$1315","$1316","$1320","$1321","$1325","$1326","$133","$1330","$1331","$1335","$1336","$134","$1340","$1341","$1345","$1346","$1350","$1351","$1355","$1356","$1360","$1361","$1365","$1366","$1370","$1371","$1375","$1376","$138","$1380","$1381","$1385","$1386","$139","$1391","$1395","$1396","$1400","$1401","$1405","$1406","$1411","$1415","$1416","$1420","$1421","$1425","$1426","$143","$1431","$1435","$1436","$144","$1440","$1441","$1445","$1446","$1468","$148","$149","$153","$154","$158","$159","$163","$164","$168","$169","$173","$174","$178","$179","$183","$184","$188","$189","$193","$194","$198","$199","$203","$204","$208","$209","$213","$214","$218","$219","$223","$224","$228","$229","$233","$234","$238","$239","$243","$244","$248","$249","$253","$254","$258","$259","$263","$264","$268","$269","$273","$274","$278","$279","$283","$284","$288","$289","$293","$294","$298","$299","$303","$304","$308","$309","$313","$314","$318","$319","$323","$324","$328","$329","$333","$334","$338","$339","$343","$344","$348","$349","$353","$354","$358","$359","$363","$364","$368","$369","$373","$374","$378","$379","$383","$384","$388","$389","$39","$393","$394","$398","$399","$40","$403","$404","$408","$409","$41","$413","$414","$418","$419","$423","$424","$428","$429","$43","$433","$434","$438","$439","$443","$444","$448","$449","$453","$454","$458","$459","$463","$464","$468","$469","$473","$474","$478","$479","$483","$484","$488","$489","$49","$493","$494","$498","$499","$503","$504","$508","$509","$513","$514","$518","$519","$52","$523","$524","$528","$529","$533","$534","$538","$539","$543","$544","$548","$549","$55","$553","$554","$558","$559","$563","$564","$568","$569","$573","$574","$578","$579","$583","$584","$588","$589","$593","$594","$598","$599","$603","$604","$608","$609","$61","$613","$614","$618","$619","$623","$624","$628","$629","$633","$634","$638","$639","$64","$643","$644","$648","$649","$653","$654","$658","$659","$663","$664","$669","$67","$673","$674","$678","$679","$683","$684","$689","$693","$694","$698","$699","$70","$703","$704","$709","$713","$714","$718","$719","$723","$724","$729","$73","$730","$731","$732","$733","$734","$735","$736","$737","$738","$739","$740","$741","$742","$743","$744","$745","$746","$76","$763","$765","$768","$771","$774","$777","$780","$783","$786","$789","$792","$795","$798","$801","$804","$807","$810","$811","$815","$816","$820","$821","$825","$826","$830","$831","$835","$836","$840","$841","$845","$846","$85","$850","$851","$855","$856","$860","$861","$865","$866","$870","$871","$875","$876","$88","$880","$881","$885","$886","$89","$890","$891","$895","$896","$900","$901","$905","$906","$910","$911","$915","$916","$920","$921","$925","$926","$930","$931","$935","$936","$94","$940","$941","$945","$946","$950","$951","$955","$956","$960","$961","$965","$966","$970","$971","$975","$976","$98","$980","$981","$985","$986","$99","$990","$991","$995","$996","asm_pbkdf2","arr","bin","atob","base","i","length","charCodeAt","_PBKDF2_OneIter","$$01$i","$$025$i$i","$$026$i$i","$$pr$i$i","$29","$44","dest","src","stop","_SHA256_Update","_SHA256_Final","_memcpy","$$0$lcssa","$$027$lcssa","$$02728","$$029","$10","$12","$13","$18","$21","_SHA256_Transform","num","ret","$$059","$$158","$$257","$112","$116","$131","$51","$63","$97","$51$looptemp","WorkerMain","Child","prehot","config","N","r","mArgN","mArgR","mBlockSize","mPtrXYV","mPtrB","size","need","ceil","mAsmBuf","byteLength","ArrayBuffer","err","mAsmU8","mAsmObj","mAsmMod","start","input","buf","set","mProgStep","mProgPos","mFirstStage","setRate","p","advance","t","stp","beg","end","last","postMessage","getTick","output","slice","state","step","onMessage","e","msg","data","cmd","success","Date","now","addEventListener","P","thread","taskPerThread","maxThread","mBlkLen","mArgP","mThreads","mReadyCounter","ptr","mPassPtr","maxPassLen","mSaltPtr","maxSaltLen","mDkPtr","maxDkLen","mBlksPtr","mWorkerUrl","createWorkerUrl","worker","mWorkerPool","Worker","onmessage","msgHander","hash","passBin","saltBin","dkLen","mPassLen","mSaltLen","mDkLen","mDoingCounter","mDoneCounter","task","free","forEach","w","unload","terminate","URL","revokeObjectURL","code","blob","Blob","type","createObjectURL","complete","dkBin","oncomplete","this","id","onready","onerror","ptrBi","bufBi"],"mappings":"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AAQ,EAAGC,EAAQ,EAAGC,EAAO,EAAGC,EAAQ,EAAGC,EAAQ,EAAGC,EAAQ,EAAGC,EAAQ,EAAGC,EAAO,EAAGC,EAAQ,EAAGC,EAAQ,EAAGC,EAAQ,EAAGC,EAAQ,EAAGC,EAAQ,EAAGC,EAAQ,EAAGC,EAAQ,EAAGC,EAAQ,EAAGC,EAAQ,EAAGC,EAAQ,EAAGC,EAAQ,EAAGC,EAAQ,EAAGC,EAAQ,EAAGC,EAAQ,EAAGC,EAAQ,EAAGC,GAAQ,EAAGC,GAAO,EAAGC,GAAQ,EAAGC,GAAQ,EAAGC,GAAQ,EAAGC,GAAQ,EAAGC,GAAO,EAAGC,GAAQ,EAAGC,GAAQ,EAAGC,GAAQ,EAAGC,GAAQ,EAAGC,GAAQ,EAAGC,GAAQ,EAAGC,GAAQ,EAAGC,GAAQ,EAAGC,GAAQ,EAAGC,GAAQ,EAAGC,GAAQ,EAAGC,GAAQ,EAAGC,GAAQ,EAAGC,GAAQ,EAAGC,GAAQ,EAAGC,GAAQ,EAAGC,GAAO,EAAGC,GAAQ,EAAGC,GAAQ,EAAGC,GAAQ,EAAGC,GAAQ,EAAGC,GAAO,EAAGC,GAAQ,EAAGC,GAAQ,EAAGC,GAAQ,EAAGC,GAAQ,EAAGC,GAAQ,EAAGC,GAAQ,EAAGC,GAAQ,EAAGC,GAAQ,EAAGC,GAAQ,EAAGC,GAAQ,EAAGC,GAAQ,EAAGC,GAAQ,EAAGC,GAAQ,EAAGC,GAAQ,EAAGC,GAAQ,EAAGC,GAAQ,EAAGC,GAAO,EAAGC,GAAQ,EAAGC,GAAQ,EAAGC,GAAQ,EAAGC,GAAQ,EAAGC,GAAO,EAAGC,GAAQ,EAAGC,GAAQ,EAAGC,GAAQ,EAAGC,GAAQ,EAAGC,GAAQ,EAAGC,GAAQ,EAAGC,GAAQ,EAAGC,GAAQ,EAAGC,GAAQ,EAAGC,GAAQ,EAAGC,GAAQ,EAAGC,GAAQ,EAAGC,GAAQ,EAAGC,GAAQ,EAAGC,GAAQ,EAAGC,GAAQ,EAAGC,GAAO,EAAGC,GAAQ,EAAGC,GAAQ,EAAGC,GAAQ,EAAGC,GAAQ,EAAGC,GAAO,EAAGC,GAAQ,EAAGC,GAAQ,EAAGC,GAAQ,EAAGC,GAAQ,EAAGC,GAAQ,EAAGC,GAAQ,EAAGC,GAAQ,EAAGC,GAAQ,EAAGC,GAAQ,EAAGC,GAAQ,EAAGC,GAAQ,EAAGC,GAAQ,EAAGC,GAAQ,EAAGC,GAAQ,EAAGC,GAAQ,EAAGC,GAAQ,EAAGC,GAAO,EAAGC,GAAQ,EAAGC,GAAQ,EAAGC,GAAQ,EAAGC,GAAQ,EAAGC,GAAO,EAAGC,GAAQ,EAAGC,GAAQ,EAAGC,GAAQ,EAAGC,GAAQ,EAAGC,GAAQ,EAAGC,GAAQ,EAAGC,GAAQ,EAAGC,GAAQ,EAAGC,GAAQ,EAAGC,GAAQ,EAAGC,GAAQ,EAAGC,GAAQ,EAAGC,GAAQ,EAAGC,GAAQ,EAAGC,GAAQ,EAAGC,GAAQ,EAAGC,GAAO,EAAGC,GAAQ,EAAGC,GAAQ,EAAGC,GAAQ,EAAGC,GAAQ,EAAGC,GAAO,EAAGC,GAAQ,EAAGC,GAAQ,EAAGC,GAAQ,EAAGC,GAAQ,EAAGC,GAAQ,EAAGC,GAAQ,EAAGC,GAAQ,EAAGC,GAAQ,EAAGC,GAAQ,EAAGC,GAAQ,EAAGC,GAAQ,EAAGC,GAAQ,EAAGC,GAAQ,EAAGC,GAAQ,EAAGC,GAAQ,EAAGC,GAAQ,EAAGC,GAAO,EAAGC,GAAQ,EAAGC,GAAQ,EAAGC,GAAQ,EAAGC,GAAQ,EAAGC,GAAO,EAAGC,GAAQ,EAAGC,GAAQ,EAAGC,GAAQ,EAAGC,GAAQ,EAAGC,GAAQ,EAAGC,GAAQ,EAAGC,GAAQ,EAAGC,GAAQ,EAAGC,GAAQ,EAAGC,GAAQ,EAAGC,GAAQ,EAAGC,GAAQ,EAAGC,GAAQ,EAAGC,GAAQ,EAAGC,GAAO,EAAGC,GAAQ,EAAGC,GAAQ,EAAGC,GAAQ,EAAGC,GAAO,EAAGC,GAAQ,EAAGC,GAAQ,EAAGC,GAAQ,EAAGC,GAAQ,EAAGC,GAAQ,EAAGC,GAAO,EAAGC,GAAO,EAAGC,GAAO,EAAGC,GAAO,EAAGC,GAAO,EAAGC,GAAO,EAAGC,GAAO,EAAGC,GAAO,EAAGC,GAAO,EAAGC,GAAO,EAAGC,GAAO,EAAGC,GAAO,EAAGC,GAAO,EAAGC,GAAO,EAAGC,GAAO,EAAGC,GAAO,EAAGC,GAAO,EAAGC,GAAO,EAAGC,GAAO,EAAGC,GAAO,EAAGC,GAAO,EAAGC,GAAO,EAAGC,GAAO,EAAGC,GAAO,EAAGC,GAAO,EAAGC,GAAO,EAAGC,GAAO,EAAGC,GAAO,EAAGC,GAAO,EAAGC,GAAO,EAAGC,GAAO,EAAGC,GAAO,EAAGC,GAA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","file":"release/scrypt.js","sourceRoot":"","sourcesContent":["\nfunction asm_smix() {\n\t'use strict';\n\n\tvar asm = function(global, env, buffer) {\n\t\t'use asm';\n\n\t\tvar\nHEAP32 = new global.Int32Array(buffer),\nMath_imul = global.Math.imul,\nHEAP8 = new global.Int8Array(buffer),\nHEAPU8 = new global.Uint8Array(buffer);\n\nfunction _SMix($0, $1, $2, $3, $4, $5, $6) {\n $0 = $0 | 0;\n $1 = $1 | 0;\n $2 = $2 | 0;\n $3 = $3 | 0;\n $4 = $4 | 0;\n $5 = $5 | 0;\n $6 = $6 | 0;\n var $$0108 = 0, $$0108$us = 0, $$016$i = 0, $$016$i100 = 0, $$016$i93 = 0, $$016$i96 = 0, $$091109 = 0, $$1113 = 0, $$1113$us = 0, $$192111 = 0, $11 = 0, $14 = 0, $15 = 0, $16 = 0, $17 = 0, $19 = 0, $25 = 0, $45 = 0, $46 = 0, $48 = 0, $53 = 0, $58 = 0, $59 = 0, $69 = 0, $7 = 0, $72 = 0, $79 = 0, $8 = 0, $82 = 0, $9 = 0, $91 = 0, $93 = 0;\n $7 = $1 << 7;\n $8 = $1 << 5;\n $9 = $3 + $7 | 0;\n $11 = $3 + ($1 << 8) | 0;\n if ($4 | 0) {\n  L3 : do if ($5 >>> 0 < $6 >>> 0) {\n   $14 = $7 + -64 | 0;\n   $15 = $3 + $14 | 0;\n   $16 = $0 + -1 | 0;\n   $17 = $8 & 1073741792;\n   $19 = $9 + $14 | 0;\n   if (!$17) {\n    $$1113$us = $5;\n    while (1) {\n     _blockmix_salsa8($3, $9, $1);\n     _blockmix_salsa8($9, $3, $1);\n     $$1113$us = $$1113$us + 2 | 0;\n     if ($$1113$us >>> 0 >= $6 >>> 0) break L3;\n    }\n   } else $$1113 = $5;\n   do {\n    $69 = $11 + ((Math_imul(HEAP32[$15 >> 2] & $16, $8) | 0) << 2) | 0;\n    $$016$i100 = 0;\n    do {\n     $72 = $3 + ($$016$i100 << 2) | 0;\n     HEAP32[$72 >> 2] = HEAP32[$72 >> 2] ^ HEAP32[$69 + ($$016$i100 << 2) >> 2];\n     $$016$i100 = $$016$i100 + 1 | 0;\n    } while (($$016$i100 | 0) != ($17 | 0));\n    _blockmix_salsa8($3, $9, $1);\n    $79 = $11 + ((Math_imul(HEAP32[$19 >> 2] & $16, $8) | 0) << 2) | 0;\n    $$016$i93 = 0;\n    do {\n     $82 = $9 + ($$016$i93 << 2) | 0;\n     HEAP32[$82 >> 2] = HEAP32[$82 >> 2] ^ HEAP32[$79 + ($$016$i93 << 2) >> 2];\n     $$016$i93 = $$016$i93 + 1 | 0;\n    } while (($$016$i93 | 0) != ($17 | 0));\n    _blockmix_salsa8($9, $3, $1);\n    $$1113 = $$1113 + 2 | 0;\n   } while ($$1113 >>> 0 < $6 >>> 0);\n  } while (0);\n  if (($6 | 0) == ($0 | 0) & ($8 | 0) != 0) $$192111 = 0; else return;\n  do {\n   $91 = $2 + ($$192111 << 2) | 0;\n   $93 = HEAP32[$3 + ($$192111 << 2) >> 2] | 0;\n   HEAP8[$91 >> 0] = $93;\n   HEAP8[$91 + 1 >> 0] = $93 >>> 8;\n   HEAP8[$91 + 2 >> 0] = $93 >>> 16;\n   HEAP8[$91 + 3 >> 0] = $93 >>> 24;\n   $$192111 = $$192111 + 1 | 0;\n  } while (($$192111 | 0) != ($8 | 0));\n  return;\n }\n if (($5 | 0) == 0 & ($8 | 0) != 0) {\n  $$091109 = 0;\n  do {\n   $25 = $2 + ($$091109 << 2) | 0;\n   HEAP32[$3 + ($$091109 << 2) >> 2] = (HEAPU8[$25 + 1 >> 0] | 0) << 8 | (HEAPU8[$25 >> 0] | 0) | (HEAPU8[$25 + 2 >> 0] | 0) << 16 | (HEAPU8[$25 + 3 >> 0] | 0) << 24;\n   $$091109 = $$091109 + 1 | 0;\n  } while (($$091109 | 0) != ($8 | 0));\n }\n $45 = Math_imul($8, $5) | 0;\n $46 = Math_imul($8, $6) | 0;\n if ($45 >>> 0 >= $46 >>> 0) return;\n $48 = $8 & 1073741792;\n if (!$48) {\n  $$0108$us = $45;\n  do {\n   _blockmix_salsa8($3, $9, $1);\n   $$0108$us = $$0108$us + $8 + $8 | 0;\n   _blockmix_salsa8($9, $3, $1);\n  } while ($$0108$us >>> 0 < $46 >>> 0);\n  return;\n } else $$0108 = $45;\n do {\n  $53 = $11 + ($$0108 << 2) | 0;\n  $$016$i = 0;\n  do {\n   HEAP32[$53 + ($$016$i << 2) >> 2] = HEAP32[$3 + ($$016$i << 2) >> 2];\n   $$016$i = $$016$i + 1 | 0;\n  } while (($$016$i | 0) != ($48 | 0));\n  $58 = $$0108 + $8 | 0;\n  _blockmix_salsa8($3, $9, $1);\n  $59 = $11 + ($58 << 2) | 0;\n  $$016$i96 = 0;\n  do {\n   HEAP32[$59 + ($$016$i96 << 2) >> 2] = HEAP32[$9 + ($$016$i96 << 2) >> 2];\n   $$016$i96 = $$016$i96 + 1 | 0;\n  } while (($$016$i96 | 0) != ($48 | 0));\n  $$0108 = $58 + $8 | 0;\n  _blockmix_salsa8($9, $3, $1);\n } while ($$0108 >>> 0 < $46 >>> 0);\n return;\n}\nfunction _blockmix_salsa8($0, $1, $2) {\n $0 = $0 | 0;\n $1 = $1 | 0;\n $2 = $2 | 0;\n var $$016081639 = 0, $$016091638 = 0, $$016101637 = 0, $$016111636 = 0, $$016121635 = 0, $$016131634 = 0, $$016141633 = 0, $$016151632 = 0, $$016161631 = 0, $$016171630 = 0, $$016181629 = 0, $$016191628 = 0, $$016201627 = 0, $$016211626 = 0, $$016221625 = 0, $$016231624 = 0, $$01640 = 0, $1000 = 0, $1001 = 0, $1005 = 0, $1006 = 0, $1010 = 0, $1011 = 0, $1015 = 0, $1016 = 0, $1020 = 0, $1021 = 0, $1025 = 0, $1026 = 0, $103 = 0, $1030 = 0, $1031 = 0, $1035 = 0, $1036 = 0, $104 = 0, $1040 = 0, $1041 = 0, $1045 = 0, $1046 = 0, $1050 = 0, $1051 = 0, $1055 = 0, $1056 = 0, $1060 = 0, $1061 = 0, $1065 = 0, $1066 = 0, $1070 = 0, $1071 = 0, $1075 = 0, $1076 = 0, $108 = 0, $1080 = 0, $1081 = 0, $1085 = 0, $1086 = 0, $109 = 0, $1090 = 0, $1091 = 0, $1095 = 0, $1096 = 0, $1100 = 0, $1101 = 0, $1105 = 0, $1106 = 0, $1110 = 0, $1111 = 0, $1115 = 0, $1116 = 0, $1120 = 0, $1121 = 0, $1125 = 0, $1126 = 0, $113 = 0, $1130 = 0, $1131 = 0, $1135 = 0, $1136 = 0, $114 = 0, $1140 = 0, $1141 = 0, $1145 = 0, $1146 = 0, $1150 = 0, $1151 = 0, $1155 = 0, $1156 = 0, $1160 = 0, $1161 = 0, $1165 = 0, $1166 = 0, $1170 = 0, $1171 = 0, $1175 = 0, $1176 = 0, $118 = 0, $1180 = 0, $1181 = 0, $1185 = 0, $1186 = 0, $119 = 0, $1190 = 0, $1191 = 0, $1195 = 0, $1196 = 0, $1200 = 0, $1201 = 0, $1205 = 0, $1206 = 0, $1210 = 0, $1211 = 0, $1215 = 0, $1216 = 0, $1220 = 0, $1221 = 0, $1225 = 0, $1226 = 0, $123 = 0, $1230 = 0, $1231 = 0, $1235 = 0, $1236 = 0, $124 = 0, $1240 = 0, $1241 = 0, $1245 = 0, $1246 = 0, $1250 = 0, $1251 = 0, $1255 = 0, $1256 = 0, $1260 = 0, $1261 = 0, $1265 = 0, $1266 = 0, $1270 = 0, $1271 = 0, $1275 = 0, $1276 = 0, $128 = 0, $1280 = 0, $1281 = 0, $1285 = 0, $1286 = 0, $129 = 0, $1290 = 0, $1291 = 0, $1295 = 0, $1296 = 0, $1300 = 0, $1301 = 0, $1305 = 0, $1306 = 0, $1310 = 0, $1311 = 0, $1315 = 0, $1316 = 0, $1320 = 0, $1321 = 0, $1325 = 0, $1326 = 0, $133 = 0, $1330 = 0, $1331 = 0, $1335 = 0, $1336 = 0, $134 = 0, $1340 = 0, $1341 = 0, $1345 = 0, $1346 = 0, $1350 = 0, $1351 = 0, $1355 = 0, $1356 = 0, $1360 = 0, $1361 = 0, $1365 = 0, $1366 = 0, $1370 = 0, $1371 = 0, $1375 = 0, $1376 = 0, $138 = 0, $1380 = 0, $1381 = 0, $1385 = 0, $1386 = 0, $139 = 0, $1391 = 0, $1395 = 0, $1396 = 0, $1400 = 0, $1401 = 0, $1405 = 0, $1406 = 0, $1411 = 0, $1415 = 0, $1416 = 0, $1420 = 0, $1421 = 0, $1425 = 0, $1426 = 0, $143 = 0, $1431 = 0, $1435 = 0, $1436 = 0, $144 = 0, $1440 = 0, $1441 = 0, $1445 = 0, $1446 = 0, $1468 = 0, $148 = 0, $149 = 0, $153 = 0, $154 = 0, $158 = 0, $159 = 0, $163 = 0, $164 = 0, $168 = 0, $169 = 0, $173 = 0, $174 = 0, $178 = 0, $179 = 0, $183 = 0, $184 = 0, $188 = 0, $189 = 0, $193 = 0, $194 = 0, $198 = 0, $199 = 0, $203 = 0, $204 = 0, $208 = 0, $209 = 0, $213 = 0, $214 = 0, $218 = 0, $219 = 0, $223 = 0, $224 = 0, $228 = 0, $229 = 0, $233 = 0, $234 = 0, $238 = 0, $239 = 0, $243 = 0, $244 = 0, $248 = 0, $249 = 0, $253 = 0, $254 = 0, $258 = 0, $259 = 0, $263 = 0, $264 = 0, $268 = 0, $269 = 0, $273 = 0, $274 = 0, $278 = 0, $279 = 0, $283 = 0, $284 = 0, $288 = 0, $289 = 0, $293 = 0, $294 = 0, $298 = 0, $299 = 0, $3 = 0, $303 = 0, $304 = 0, $308 = 0, $309 = 0, $313 = 0, $314 = 0, $318 = 0, $319 = 0, $323 = 0, $324 = 0, $328 = 0, $329 = 0, $333 = 0, $334 = 0, $338 = 0, $339 = 0, $343 = 0, $344 = 0, $348 = 0, $349 = 0, $353 = 0, $354 = 0, $358 = 0, $359 = 0, $363 = 0, $364 = 0, $368 = 0, $369 = 0, $373 = 0, $374 = 0, $378 = 0, $379 = 0, $383 = 0, $384 = 0, $388 = 0, $389 = 0, $39 = 0, $393 = 0, $394 = 0, $398 = 0, $399 = 0, $40 = 0, $403 = 0, $404 = 0, $408 = 0, $409 = 0, $41 = 0, $413 = 0, $414 = 0, $418 = 0, $419 = 0, $423 = 0, $424 = 0, $428 = 0, $429 = 0, $43 = 0, $433 = 0, $434 = 0, $438 = 0, $439 = 0, $443 = 0, $444 = 0, $448 = 0, $449 = 0, $453 = 0, $454 = 0, $458 = 0, $459 = 0, $46 = 0, $463 = 0, $464 = 0, $468 = 0, $469 = 0, $473 = 0, $474 = 0, $478 = 0, $479 = 0, $483 = 0, $484 = 0, $488 = 0, $489 = 0, $49 = 0, $493 = 0, $494 = 0, $498 = 0, $499 = 0, $503 = 0, $504 = 0, $508 = 0, $509 = 0, $513 = 0, $514 = 0, $518 = 0, $519 = 0, $52 = 0, $523 = 0, $524 = 0, $528 = 0, $529 = 0, $533 = 0, $534 = 0, $538 = 0, $539 = 0, $543 = 0, $544 = 0, $548 = 0, $549 = 0, $55 = 0, $553 = 0, $554 = 0, $558 = 0, $559 = 0, $563 = 0, $564 = 0, $568 = 0, $569 = 0, $573 = 0, $574 = 0, $578 = 0, $579 = 0, $58 = 0, $583 = 0, $584 = 0, $588 = 0, $589 = 0, $593 = 0, $594 = 0, $598 = 0, $599 = 0, $6 = 0, $603 = 0, $604 = 0, $608 = 0, $609 = 0, $61 = 0, $613 = 0, $614 = 0, $618 = 0, $619 = 0, $623 = 0, $624 = 0, $628 = 0, $629 = 0, $633 = 0, $634 = 0, $638 = 0, $639 = 0, $64 = 0, $643 = 0, $644 = 0, $648 = 0, $649 = 0, $653 = 0, $654 = 0, $658 = 0, $659 = 0, $663 = 0, $664 = 0, $669 = 0, $67 = 0, $673 = 0, $674 = 0, $678 = 0, $679 = 0, $683 = 0, $684 = 0, $689 = 0, $693 = 0, $694 = 0, $698 = 0, $699 = 0, $70 = 0, $703 = 0, $704 = 0, $709 = 0, $713 = 0, $714 = 0, $718 = 0, $719 = 0, $723 = 0, $724 = 0, $729 = 0, $73 = 0, $730 = 0, $731 = 0, $732 = 0, $733 = 0, $734 = 0, $735 = 0, $736 = 0, $737 = 0, $738 = 0, $739 = 0, $740 = 0, $741 = 0, $742 = 0, $743 = 0, $744 = 0, $745 = 0, $746 = 0, $76 = 0, $763 = 0, $765 = 0, $768 = 0, $771 = 0, $774 = 0, $777 = 0, $780 = 0, $783 = 0, $786 = 0, $789 = 0, $79 = 0, $792 = 0, $795 = 0, $798 = 0, $801 = 0, $804 = 0, $807 = 0, $810 = 0, $811 = 0, $815 = 0, $816 = 0, $82 = 0, $820 = 0, $821 = 0, $825 = 0, $826 = 0, $830 = 0, $831 = 0, $835 = 0, $836 = 0, $840 = 0, $841 = 0, $845 = 0, $846 = 0, $85 = 0, $850 = 0, $851 = 0, $855 = 0, $856 = 0, $860 = 0, $861 = 0, $865 = 0, $866 = 0, $870 = 0, $871 = 0, $875 = 0, $876 = 0, $88 = 0, $880 = 0, $881 = 0, $885 = 0, $886 = 0, $89 = 0, $890 = 0, $891 = 0, $895 = 0, $896 = 0, $900 = 0, $901 = 0, $905 = 0, $906 = 0, $910 = 0, $911 = 0, $915 = 0, $916 = 0, $920 = 0, $921 = 0, $925 = 0, $926 = 0, $93 = 0, $930 = 0, $931 = 0, $935 = 0, $936 = 0, $94 = 0, $940 = 0, $941 = 0, $945 = 0, $946 = 0, $950 = 0, $951 = 0, $955 = 0, $956 = 0, $960 = 0, $961 = 0, $965 = 0, $966 = 0, $970 = 0, $971 = 0, $975 = 0, $976 = 0, $98 = 0, $980 = 0, $981 = 0, $985 = 0, $986 = 0, $99 = 0, $990 = 0, $991 = 0, $995 = 0, $996 = 0;\n $3 = $2 << 1;\n $6 = $0 + (($2 << 5) + -16 << 2) | 0;\n if (!$3) return;\n $39 = $2 << 4;\n $$016081639 = HEAP32[$6 >> 2] | 0;\n $$016091638 = HEAP32[$6 + 4 >> 2] | 0;\n $$016101637 = HEAP32[$6 + 8 >> 2] | 0;\n $$016111636 = HEAP32[$6 + 12 >> 2] | 0;\n $$016121635 = HEAP32[$6 + 16 >> 2] | 0;\n $$016131634 = HEAP32[$6 + 20 >> 2] | 0;\n $$016141633 = HEAP32[$6 + 24 >> 2] | 0;\n $$016151632 = HEAP32[$6 + 28 >> 2] | 0;\n $$016161631 = HEAP32[$6 + 32 >> 2] | 0;\n $$016171630 = HEAP32[$6 + 36 >> 2] | 0;\n $$016181629 = HEAP32[$6 + 40 >> 2] | 0;\n $$016191628 = HEAP32[$6 + 44 >> 2] | 0;\n $$016201627 = HEAP32[$6 + 48 >> 2] | 0;\n $$016211626 = HEAP32[$6 + 52 >> 2] | 0;\n $$016221625 = HEAP32[$6 + 56 >> 2] | 0;\n $$016231624 = HEAP32[$6 + 60 >> 2] | 0;\n $$01640 = 0;\n do {\n  $40 = $$01640 << 4;\n  $41 = $0 + ($40 << 2) | 0;\n  $43 = HEAP32[$41 >> 2] ^ $$016081639;\n  $46 = HEAP32[$41 + 4 >> 2] ^ $$016091638;\n  $49 = HEAP32[$41 + 8 >> 2] ^ $$016101637;\n  $52 = HEAP32[$41 + 12 >> 2] ^ $$016111636;\n  $55 = HEAP32[$41 + 16 >> 2] ^ $$016121635;\n  $58 = HEAP32[$41 + 20 >> 2] ^ $$016131634;\n  $61 = HEAP32[$41 + 24 >> 2] ^ $$016141633;\n  $64 = HEAP32[$41 + 28 >> 2] ^ $$016151632;\n  $67 = HEAP32[$41 + 32 >> 2] ^ $$016161631;\n  $70 = HEAP32[$41 + 36 >> 2] ^ $$016171630;\n  $73 = HEAP32[$41 + 40 >> 2] ^ $$016181629;\n  $76 = HEAP32[$41 + 44 >> 2] ^ $$016191628;\n  $79 = HEAP32[$41 + 48 >> 2] ^ $$016201627;\n  $82 = HEAP32[$41 + 52 >> 2] ^ $$016211626;\n  $85 = HEAP32[$41 + 56 >> 2] ^ $$016221625;\n  $88 = HEAP32[$41 + 60 >> 2] ^ $$016231624;\n  $89 = $79 + $43 | 0;\n  $93 = ($89 << 7 | $89 >>> 25) ^ $55;\n  $94 = $93 + $43 | 0;\n  $98 = ($94 << 9 | $94 >>> 23) ^ $67;\n  $99 = $98 + $93 | 0;\n  $103 = ($99 << 13 | $99 >>> 19) ^ $79;\n  $104 = $103 + $98 | 0;\n  $108 = ($104 << 18 | $104 >>> 14) ^ $43;\n  $109 = $58 + $46 | 0;\n  $113 = $70 ^ ($109 << 7 | $109 >>> 25);\n  $114 = $113 + $58 | 0;\n  $118 = $82 ^ ($114 << 9 | $114 >>> 23);\n  $119 = $118 + $113 | 0;\n  $123 = ($119 << 13 | $119 >>> 19) ^ $46;\n  $124 = $123 + $118 | 0;\n  $128 = ($124 << 18 | $124 >>> 14) ^ $58;\n  $129 = $73 + $61 | 0;\n  $133 = $85 ^ ($129 << 7 | $129 >>> 25);\n  $134 = $133 + $73 | 0;\n  $138 = ($134 << 9 | $134 >>> 23) ^ $49;\n  $139 = $138 + $133 | 0;\n  $143 = ($139 << 13 | $139 >>> 19) ^ $61;\n  $144 = $143 + $138 | 0;\n  $148 = ($144 << 18 | $144 >>> 14) ^ $73;\n  $149 = $88 + $76 | 0;\n  $153 = ($149 << 7 | $149 >>> 25) ^ $52;\n  $154 = $153 + $88 | 0;\n  $158 = ($154 << 9 | $154 >>> 23) ^ $64;\n  $159 = $158 + $153 | 0;\n  $163 = ($159 << 13 | $159 >>> 19) ^ $76;\n  $164 = $163 + $158 | 0;\n  $168 = ($164 << 18 | $164 >>> 14) ^ $88;\n  $169 = $108 + $153 | 0;\n  $173 = ($169 << 7 | $169 >>> 25) ^ $123;\n  $174 = $173 + $108 | 0;\n  $178 = ($174 << 9 | $174 >>> 23) ^ $138;\n  $179 = $178 + $173 | 0;\n  $183 = ($179 << 13 | $179 >>> 19) ^ $153;\n  $184 = $183 + $178 | 0;\n  $188 = ($184 << 18 | $184 >>> 14) ^ $108;\n  $189 = $128 + $93 | 0;\n  $193 = ($189 << 7 | $189 >>> 25) ^ $143;\n  $194 = $193 + $128 | 0;\n  $198 = ($194 << 9 | $194 >>> 23) ^ $158;\n  $199 = $198 + $193 | 0;\n  $203 = ($199 << 13 | $199 >>> 19) ^ $93;\n  $204 = $203 + $198 | 0;\n  $208 = ($204 << 18 | $204 >>> 14) ^ $128;\n  $209 = $148 + $113 | 0;\n  $213 = ($209 << 7 | $209 >>> 25) ^ $163;\n  $214 = $213 + $148 | 0;\n  $218 = ($214 << 9 | $214 >>> 23) ^ $98;\n  $219 = $218 + $213 | 0;\n  $223 = ($219 << 13 | $219 >>> 19) ^ $113;\n  $224 = $223 + $218 | 0;\n  $228 = ($224 << 18 | $224 >>> 14) ^ $148;\n  $229 = $168 + $133 | 0;\n  $233 = ($229 << 7 | $229 >>> 25) ^ $103;\n  $234 = $233 + $168 | 0;\n  $238 = ($234 << 9 | $234 >>> 23) ^ $118;\n  $239 = $238 + $233 | 0;\n  $243 = ($239 << 13 | $239 >>> 19) ^ $133;\n  $244 = $243 + $238 | 0;\n  $248 = ($244 << 18 | $244 >>> 14) ^ $168;\n  $249 = $188 + $233 | 0;\n  $253 = ($249 << 7 | $249 >>> 25) ^ $203;\n  $254 = $253 + $188 | 0;\n  $258 = ($254 << 9 | $254 >>> 23) ^ $218;\n  $259 = $258 + $253 | 0;\n  $263 = ($259 << 13 | $259 >>> 19) ^ $233;\n  $264 = $263 + $258 | 0;\n  $268 = ($264 << 18 | $264 >>> 14) ^ $188;\n  $269 = $208 + $173 | 0;\n  $273 = ($269 << 7 | $269 >>> 25) ^ $223;\n  $274 = $273 + $208 | 0;\n  $278 = ($274 << 9 | $274 >>> 23) ^ $238;\n  $279 = $278 + $273 | 0;\n  $283 = ($279 << 13 | $279 >>> 19) ^ $173;\n  $284 = $283 + $278 | 0;\n  $288 = ($284 << 18 | $284 >>> 14) ^ $208;\n  $289 = $228 + $193 | 0;\n  $293 = ($289 << 7 | $289 >>> 25) ^ $243;\n  $294 = $293 + $228 | 0;\n  $298 = ($294 << 9 | $294 >>> 23) ^ $178;\n  $299 = $298 + $293 | 0;\n  $303 = ($299 << 13 | $299 >>> 19) ^ $193;\n  $304 = $303 + $298 | 0;\n  $308 = ($304 << 18 | $304 >>> 14) ^ $228;\n  $309 = $248 + $213 | 0;\n  $313 = ($309 << 7 | $309 >>> 25) ^ $183;\n  $314 = $313 + $248 | 0;\n  $318 = ($314 << 9 | $314 >>> 23) ^ $198;\n  $319 = $318 + $313 | 0;\n  $323 = ($319 << 13 | $319 >>> 19) ^ $213;\n  $324 = $323 + $318 | 0;\n  $328 = ($324 << 18 | $324 >>> 14) ^ $248;\n  $329 = $268 + $313 | 0;\n  $333 = ($329 << 7 | $329 >>> 25) ^ $283;\n  $334 = $333 + $268 | 0;\n  $338 = ($334 << 9 | $334 >>> 23) ^ $298;\n  $339 = $338 + $333 | 0;\n  $343 = ($339 << 13 | $339 >>> 19) ^ $313;\n  $344 = $343 + $338 | 0;\n  $348 = ($344 << 18 | $344 >>> 14) ^ $268;\n  $349 = $288 + $253 | 0;\n  $353 = ($349 << 7 | $349 >>> 25) ^ $303;\n  $354 = $353 + $288 | 0;\n  $358 = ($354 << 9 | $354 >>> 23) ^ $318;\n  $359 = $358 + $353 | 0;\n  $363 = ($359 << 13 | $359 >>> 19) ^ $253;\n  $364 = $363 + $358 | 0;\n  $368 = ($364 << 18 | $364 >>> 14) ^ $288;\n  $369 = $308 + $273 | 0;\n  $373 = ($369 << 7 | $369 >>> 25) ^ $323;\n  $374 = $373 + $308 | 0;\n  $378 = ($374 << 9 | $374 >>> 23) ^ $258;\n  $379 = $378 + $373 | 0;\n  $383 = ($379 << 13 | $379 >>> 19) ^ $273;\n  $384 = $383 + $378 | 0;\n  $388 = ($384 << 18 | $384 >>> 14) ^ $308;\n  $389 = $328 + $293 | 0;\n  $393 = ($389 << 7 | $389 >>> 25) ^ $263;\n  $394 = $393 + $328 | 0;\n  $398 = ($394 << 9 | $394 >>> 23) ^ $278;\n  $399 = $398 + $393 | 0;\n  $403 = ($399 << 13 | $399 >>> 19) ^ $293;\n  $404 = $403 + $398 | 0;\n  $408 = ($404 << 18 | $404 >>> 14) ^ $328;\n  $409 = $348 + $393 | 0;\n  $413 = ($409 << 7 | $409 >>> 25) ^ $363;\n  $414 = $413 + $348 | 0;\n  $418 = ($414 << 9 | $414 >>> 23) ^ $378;\n  $419 = $418 + $413 | 0;\n  $423 = ($419 << 13 | $419 >>> 19) ^ $393;\n  $424 = $423 + $418 | 0;\n  $428 = ($424 << 18 | $424 >>> 14) ^ $348;\n  $429 = $368 + $333 | 0;\n  $433 = ($429 << 7 | $429 >>> 25) ^ $383;\n  $434 = $433 + $368 | 0;\n  $438 = ($434 << 9 | $434 >>> 23) ^ $398;\n  $439 = $438 + $433 | 0;\n  $443 = ($439 << 13 | $439 >>> 19) ^ $333;\n  $444 = $443 + $438 | 0;\n  $448 = ($444 << 18 | $444 >>> 14) ^ $368;\n  $449 = $388 + $353 | 0;\n  $453 = ($449 << 7 | $449 >>> 25) ^ $403;\n  $454 = $453 + $388 | 0;\n  $458 = ($454 << 9 | $454 >>> 23) ^ $338;\n  $459 = $458 + $453 | 0;\n  $463 = ($459 << 13 | $459 >>> 19) ^ $353;\n  $464 = $463 + $458 | 0;\n  $468 = ($464 << 18 | $464 >>> 14) ^ $388;\n  $469 = $408 + $373 | 0;\n  $473 = ($469 << 7 | $469 >>> 25) ^ $343;\n  $474 = $473 + $408 | 0;\n  $478 = ($474 << 9 | $474 >>> 23) ^ $358;\n  $479 = $478 + $473 | 0;\n  $483 = ($479 << 13 | $479 >>> 19) ^ $373;\n  $484 = $483 + $478 | 0;\n  $488 = ($484 << 18 | $484 >>> 14) ^ $408;\n  $489 = $428 + $473 | 0;\n  $493 = ($489 << 7 | $489 >>> 25) ^ $443;\n  $494 = $493 + $428 | 0;\n  $498 = ($494 << 9 | $494 >>> 23) ^ $458;\n  $499 = $498 + $493 | 0;\n  $503 = ($499 << 13 | $499 >>> 19) ^ $473;\n  $504 = $503 + $498 | 0;\n  $508 = ($504 << 18 | $504 >>> 14) ^ $428;\n  $509 = $448 + $413 | 0;\n  $513 = ($509 << 7 | $509 >>> 25) ^ $463;\n  $514 = $513 + $448 | 0;\n  $518 = ($514 << 9 | $514 >>> 23) ^ $478;\n  $519 = $518 + $513 | 0;\n  $523 = ($519 << 13 | $519 >>> 19) ^ $413;\n  $524 = $523 + $518 | 0;\n  $528 = ($524 << 18 | $524 >>> 14) ^ $448;\n  $529 = $468 + $433 | 0;\n  $533 = ($529 << 7 | $529 >>> 25) ^ $483;\n  $534 = $533 + $468 | 0;\n  $538 = ($534 << 9 | $534 >>> 23) ^ $418;\n  $539 = $538 + $533 | 0;\n  $543 = ($539 << 13 | $539 >>> 19) ^ $433;\n  $544 = $543 + $538 | 0;\n  $548 = ($544 << 18 | $544 >>> 14) ^ $468;\n  $549 = $488 + $453 | 0;\n  $553 = ($549 << 7 | $549 >>> 25) ^ $423;\n  $554 = $553 + $488 | 0;\n  $558 = ($554 << 9 | $554 >>> 23) ^ $438;\n  $559 = $558 + $553 | 0;\n  $563 = ($559 << 13 | $559 >>> 19) ^ $453;\n  $564 = $563 + $558 | 0;\n  $568 = ($564 << 18 | $564 >>> 14) ^ $488;\n  $569 = $508 + $553 | 0;\n  $573 = ($569 << 7 | $569 >>> 25) ^ $523;\n  $574 = $573 + $508 | 0;\n  $578 = ($574 << 9 | $574 >>> 23) ^ $538;\n  $579 = $578 + $573 | 0;\n  $583 = ($579 << 13 | $579 >>> 19) ^ $553;\n  $584 = $583 + $578 | 0;\n  $588 = ($584 << 18 | $584 >>> 14) ^ $508;\n  $589 = $528 + $493 | 0;\n  $593 = ($589 << 7 | $589 >>> 25) ^ $543;\n  $594 = $593 + $528 | 0;\n  $598 = ($594 << 9 | $594 >>> 23) ^ $558;\n  $599 = $598 + $593 | 0;\n  $603 = ($599 << 13 | $599 >>> 19) ^ $493;\n  $604 = $603 + $598 | 0;\n  $608 = ($604 << 18 | $604 >>> 14) ^ $528;\n  $609 = $548 + $513 | 0;\n  $613 = ($609 << 7 | $609 >>> 25) ^ $563;\n  $614 = $613 + $548 | 0;\n  $618 = ($614 << 9 | $614 >>> 23) ^ $498;\n  $619 = $618 + $613 | 0;\n  $623 = ($619 << 13 | $619 >>> 19) ^ $513;\n  $624 = $623 + $618 | 0;\n  $628 = ($624 << 18 | $624 >>> 14) ^ $548;\n  $629 = $568 + $533 | 0;\n  $633 = ($629 << 7 | $629 >>> 25) ^ $503;\n  $634 = $633 + $568 | 0;\n  $638 = ($634 << 9 | $634 >>> 23) ^ $518;\n  $639 = $638 + $633 | 0;\n  $643 = ($639 << 13 | $639 >>> 19) ^ $533;\n  $644 = $643 + $638 | 0;\n  $648 = ($644 << 18 | $644 >>> 14) ^ $568;\n  $649 = $588 + $633 | 0;\n  $653 = ($649 << 7 | $649 >>> 25) ^ $603;\n  $654 = $653 + $588 | 0;\n  $658 = ($654 << 9 | $654 >>> 23) ^ $618;\n  $659 = $658 + $653 | 0;\n  $663 = ($659 << 13 | $659 >>> 19) ^ $633;\n  $664 = $663 + $658 | 0;\n  $669 = $608 + $573 | 0;\n  $673 = ($669 << 7 | $669 >>> 25) ^ $623;\n  $674 = $673 + $608 | 0;\n  $678 = ($674 << 9 | $674 >>> 23) ^ $638;\n  $679 = $678 + $673 | 0;\n  $683 = ($679 << 13 | $679 >>> 19) ^ $573;\n  $684 = $683 + $678 | 0;\n  $689 = $628 + $593 | 0;\n  $693 = ($689 << 7 | $689 >>> 25) ^ $643;\n  $694 = $693 + $628 | 0;\n  $698 = ($694 << 9 | $694 >>> 23) ^ $578;\n  $699 = $698 + $693 | 0;\n  $703 = ($699 << 13 | $699 >>> 19) ^ $593;\n  $704 = $703 + $698 | 0;\n  $709 = $648 + $613 | 0;\n  $713 = ($709 << 7 | $709 >>> 25) ^ $583;\n  $714 = $713 + $648 | 0;\n  $718 = ($714 << 9 | $714 >>> 23) ^ $598;\n  $719 = $718 + $713 | 0;\n  $723 = ($719 << 13 | $719 >>> 19) ^ $613;\n  $724 = $723 + $718 | 0;\n  $729 = (($664 << 18 | $664 >>> 14) ^ $588) + $43 | 0;\n  $730 = $653 + $46 | 0;\n  $731 = $658 + $49 | 0;\n  $732 = $663 + $52 | 0;\n  $733 = $683 + $55 | 0;\n  $734 = (($684 << 18 | $684 >>> 14) ^ $608) + $58 | 0;\n  $735 = $673 + $61 | 0;\n  $736 = $678 + $64 | 0;\n  $737 = $698 + $67 | 0;\n  $738 = $703 + $70 | 0;\n  $739 = (($704 << 18 | $704 >>> 14) ^ $628) + $73 | 0;\n  $740 = $693 + $76 | 0;\n  $741 = $713 + $79 | 0;\n  $742 = $718 + $82 | 0;\n  $743 = $723 + $85 | 0;\n  $744 = (($724 << 18 | $724 >>> 14) ^ $648) + $88 | 0;\n  $745 = $$01640 << 3;\n  $746 = $1 + ($745 << 2) | 0;\n  HEAP32[$746 >> 2] = $729;\n  HEAP32[$746 + 4 >> 2] = $730;\n  HEAP32[$746 + 8 >> 2] = $731;\n  HEAP32[$746 + 12 >> 2] = $732;\n  HEAP32[$746 + 16 >> 2] = $733;\n  HEAP32[$746 + 20 >> 2] = $734;\n  HEAP32[$746 + 24 >> 2] = $735;\n  HEAP32[$746 + 28 >> 2] = $736;\n  HEAP32[$746 + 32 >> 2] = $737;\n  HEAP32[$746 + 36 >> 2] = $738;\n  HEAP32[$746 + 40 >> 2] = $739;\n  HEAP32[$746 + 44 >> 2] = $740;\n  HEAP32[$746 + 48 >> 2] = $741;\n  HEAP32[$746 + 52 >> 2] = $742;\n  HEAP32[$746 + 56 >> 2] = $743;\n  HEAP32[$746 + 60 >> 2] = $744;\n  $763 = $0 + (($40 | 16) << 2) | 0;\n  $765 = $729 ^ HEAP32[$763 >> 2];\n  $768 = $730 ^ HEAP32[$763 + 4 >> 2];\n  $771 = $731 ^ HEAP32[$763 + 8 >> 2];\n  $774 = $732 ^ HEAP32[$763 + 12 >> 2];\n  $777 = $733 ^ HEAP32[$763 + 16 >> 2];\n  $780 = $734 ^ HEAP32[$763 + 20 >> 2];\n  $783 = $735 ^ HEAP32[$763 + 24 >> 2];\n  $786 = $736 ^ HEAP32[$763 + 28 >> 2];\n  $789 = $737 ^ HEAP32[$763 + 32 >> 2];\n  $792 = $738 ^ HEAP32[$763 + 36 >> 2];\n  $795 = $739 ^ HEAP32[$763 + 40 >> 2];\n  $798 = $740 ^ HEAP32[$763 + 44 >> 2];\n  $801 = $741 ^ HEAP32[$763 + 48 >> 2];\n  $804 = $742 ^ HEAP32[$763 + 52 >> 2];\n  $807 = $743 ^ HEAP32[$763 + 56 >> 2];\n  $810 = $744 ^ HEAP32[$763 + 60 >> 2];\n  $811 = $765 + $801 | 0;\n  $815 = ($811 << 7 | $811 >>> 25) ^ $777;\n  $816 = $815 + $765 | 0;\n  $820 = ($816 << 9 | $816 >>> 23) ^ $789;\n  $821 = $820 + $815 | 0;\n  $825 = ($821 << 13 | $821 >>> 19) ^ $801;\n  $826 = $825 + $820 | 0;\n  $830 = ($826 << 18 | $826 >>> 14) ^ $765;\n  $831 = $780 + $768 | 0;\n  $835 = ($831 << 7 | $831 >>> 25) ^ $792;\n  $836 = $835 + $780 | 0;\n  $840 = ($836 << 9 | $836 >>> 23) ^ $804;\n  $841 = $840 + $835 | 0;\n  $845 = ($841 << 13 | $841 >>> 19) ^ $768;\n  $846 = $845 + $840 | 0;\n  $850 = ($846 << 18 | $846 >>> 14) ^ $780;\n  $851 = $795 + $783 | 0;\n  $855 = ($851 << 7 | $851 >>> 25) ^ $807;\n  $856 = $855 + $795 | 0;\n  $860 = ($856 << 9 | $856 >>> 23) ^ $771;\n  $861 = $860 + $855 | 0;\n  $865 = ($861 << 13 | $861 >>> 19) ^ $783;\n  $866 = $865 + $860 | 0;\n  $870 = ($866 << 18 | $866 >>> 14) ^ $795;\n  $871 = $810 + $798 | 0;\n  $875 = ($871 << 7 | $871 >>> 25) ^ $774;\n  $876 = $875 + $810 | 0;\n  $880 = ($876 << 9 | $876 >>> 23) ^ $786;\n  $881 = $880 + $875 | 0;\n  $885 = ($881 << 13 | $881 >>> 19) ^ $798;\n  $886 = $885 + $880 | 0;\n  $890 = ($886 << 18 | $886 >>> 14) ^ $810;\n  $891 = $830 + $875 | 0;\n  $895 = ($891 << 7 | $891 >>> 25) ^ $845;\n  $896 = $895 + $830 | 0;\n  $900 = ($896 << 9 | $896 >>> 23) ^ $860;\n  $901 = $900 + $895 | 0;\n  $905 = ($901 << 13 | $901 >>> 19) ^ $875;\n  $906 = $905 + $900 | 0;\n  $910 = ($906 << 18 | $906 >>> 14) ^ $830;\n  $911 = $850 + $815 | 0;\n  $915 = ($911 << 7 | $911 >>> 25) ^ $865;\n  $916 = $915 + $850 | 0;\n  $920 = ($916 << 9 | $916 >>> 23) ^ $880;\n  $921 = $920 + $915 | 0;\n  $925 = ($921 << 13 | $921 >>> 19) ^ $815;\n  $926 = $925 + $920 | 0;\n  $930 = ($926 << 18 | $926 >>> 14) ^ $850;\n  $931 = $870 + $835 | 0;\n  $935 = ($931 << 7 | $931 >>> 25) ^ $885;\n  $936 = $935 + $870 | 0;\n  $940 = ($936 << 9 | $936 >>> 23) ^ $820;\n  $941 = $940 + $935 | 0;\n  $945 = ($941 << 13 | $941 >>> 19) ^ $835;\n  $946 = $945 + $940 | 0;\n  $950 = ($946 << 18 | $946 >>> 14) ^ $870;\n  $951 = $890 + $855 | 0;\n  $955 = ($951 << 7 | $951 >>> 25) ^ $825;\n  $956 = $955 + $890 | 0;\n  $960 = ($956 << 9 | $956 >>> 23) ^ $840;\n  $961 = $960 + $955 | 0;\n  $965 = ($961 << 13 | $961 >>> 19) ^ $855;\n  $966 = $965 + $960 | 0;\n  $970 = ($966 << 18 | $966 >>> 14) ^ $890;\n  $971 = $910 + $955 | 0;\n  $975 = ($971 << 7 | $971 >>> 25) ^ $925;\n  $976 = $975 + $910 | 0;\n  $980 = ($976 << 9 | $976 >>> 23) ^ $940;\n  $981 = $980 + $975 | 0;\n  $985 = ($981 << 13 | $981 >>> 19) ^ $955;\n  $986 = $985 + $980 | 0;\n  $990 = ($986 << 18 | $986 >>> 14) ^ $910;\n  $991 = $930 + $895 | 0;\n  $995 = ($991 << 7 | $991 >>> 25) ^ $945;\n  $996 = $995 + $930 | 0;\n  $1000 = ($996 << 9 | $996 >>> 23) ^ $960;\n  $1001 = $1000 + $995 | 0;\n  $1005 = ($1001 << 13 | $1001 >>> 19) ^ $895;\n  $1006 = $1005 + $1000 | 0;\n  $1010 = ($1006 << 18 | $1006 >>> 14) ^ $930;\n  $1011 = $950 + $915 | 0;\n  $1015 = ($1011 << 7 | $1011 >>> 25) ^ $965;\n  $1016 = $1015 + $950 | 0;\n  $1020 = ($1016 << 9 | $1016 >>> 23) ^ $900;\n  $1021 = $1020 + $1015 | 0;\n  $1025 = ($1021 << 13 | $1021 >>> 19) ^ $915;\n  $1026 = $1025 + $1020 | 0;\n  $1030 = ($1026 << 18 | $1026 >>> 14) ^ $950;\n  $1031 = $970 + $935 | 0;\n  $1035 = ($1031 << 7 | $1031 >>> 25) ^ $905;\n  $1036 = $1035 + $970 | 0;\n  $1040 = ($1036 << 9 | $1036 >>> 23) ^ $920;\n  $1041 = $1040 + $1035 | 0;\n  $1045 = ($1041 << 13 | $1041 >>> 19) ^ $935;\n  $1046 = $1045 + $1040 | 0;\n  $1050 = ($1046 << 18 | $1046 >>> 14) ^ $970;\n  $1051 = $990 + $1035 | 0;\n  $1055 = ($1051 << 7 | $1051 >>> 25) ^ $1005;\n  $1056 = $1055 + $990 | 0;\n  $1060 = ($1056 << 9 | $1056 >>> 23) ^ $1020;\n  $1061 = $1060 + $1055 | 0;\n  $1065 = ($1061 << 13 | $1061 >>> 19) ^ $1035;\n  $1066 = $1065 + $1060 | 0;\n  $1070 = ($1066 << 18 | $1066 >>> 14) ^ $990;\n  $1071 = $1010 + $975 | 0;\n  $1075 = ($1071 << 7 | $1071 >>> 25) ^ $1025;\n  $1076 = $1075 + $1010 | 0;\n  $1080 = ($1076 << 9 | $1076 >>> 23) ^ $1040;\n  $1081 = $1080 + $1075 | 0;\n  $1085 = ($1081 << 13 | $1081 >>> 19) ^ $975;\n  $1086 = $1085 + $1080 | 0;\n  $1090 = ($1086 << 18 | $1086 >>> 14) ^ $1010;\n  $1091 = $1030 + $995 | 0;\n  $1095 = ($1091 << 7 | $1091 >>> 25) ^ $1045;\n  $1096 = $1095 + $1030 | 0;\n  $1100 = ($1096 << 9 | $1096 >>> 23) ^ $980;\n  $1101 = $1100 + $1095 | 0;\n  $1105 = ($1101 << 13 | $1101 >>> 19) ^ $995;\n  $1106 = $1105 + $1100 | 0;\n  $1110 = ($1106 << 18 | $1106 >>> 14) ^ $1030;\n  $1111 = $1050 + $1015 | 0;\n  $1115 = ($1111 << 7 | $1111 >>> 25) ^ $985;\n  $1116 = $1115 + $1050 | 0;\n  $1120 = ($1116 << 9 | $1116 >>> 23) ^ $1000;\n  $1121 = $1120 + $1115 | 0;\n  $1125 = ($1121 << 13 | $1121 >>> 19) ^ $1015;\n  $1126 = $1125 + $1120 | 0;\n  $1130 = ($1126 << 18 | $1126 >>> 14) ^ $1050;\n  $1131 = $1070 + $1115 | 0;\n  $1135 = ($1131 << 7 | $1131 >>> 25) ^ $1085;\n  $1136 = $1135 + $1070 | 0;\n  $1140 = ($1136 << 9 | $1136 >>> 23) ^ $1100;\n  $1141 = $1140 + $1135 | 0;\n  $1145 = ($1141 << 13 | $1141 >>> 19) ^ $1115;\n  $1146 = $1145 + $1140 | 0;\n  $1150 = ($1146 << 18 | $1146 >>> 14) ^ $1070;\n  $1151 = $1090 + $1055 | 0;\n  $1155 = ($1151 << 7 | $1151 >>> 25) ^ $1105;\n  $1156 = $1155 + $1090 | 0;\n  $1160 = ($1156 << 9 | $1156 >>> 23) ^ $1120;\n  $1161 = $1160 + $1155 | 0;\n  $1165 = ($1161 << 13 | $1161 >>> 19) ^ $1055;\n  $1166 = $1165 + $1160 | 0;\n  $1170 = ($1166 << 18 | $1166 >>> 14) ^ $1090;\n  $1171 = $1110 + $1075 | 0;\n  $1175 = ($1171 << 7 | $1171 >>> 25) ^ $1125;\n  $1176 = $1175 + $1110 | 0;\n  $1180 = ($1176 << 9 | $1176 >>> 23) ^ $1060;\n  $1181 = $1180 + $1175 | 0;\n  $1185 = ($1181 << 13 | $1181 >>> 19) ^ $1075;\n  $1186 = $1185 + $1180 | 0;\n  $1190 = ($1186 << 18 | $1186 >>> 14) ^ $1110;\n  $1191 = $1130 + $1095 | 0;\n  $1195 = ($1191 << 7 | $1191 >>> 25) ^ $1065;\n  $1196 = $1195 + $1130 | 0;\n  $1200 = ($1196 << 9 | $1196 >>> 23) ^ $1080;\n  $1201 = $1200 + $1195 | 0;\n  $1205 = ($1201 << 13 | $1201 >>> 19) ^ $1095;\n  $1206 = $1205 + $1200 | 0;\n  $1210 = ($1206 << 18 | $1206 >>> 14) ^ $1130;\n  $1211 = $1150 + $1195 | 0;\n  $1215 = ($1211 << 7 | $1211 >>> 25) ^ $1165;\n  $1216 = $1215 + $1150 | 0;\n  $1220 = ($1216 << 9 | $1216 >>> 23) ^ $1180;\n  $1221 = $1220 + $1215 | 0;\n  $1225 = ($1221 << 13 | $1221 >>> 19) ^ $1195;\n  $1226 = $1225 + $1220 | 0;\n  $1230 = ($1226 << 18 | $1226 >>> 14) ^ $1150;\n  $1231 = $1170 + $1135 | 0;\n  $1235 = ($1231 << 7 | $1231 >>> 25) ^ $1185;\n  $1236 = $1235 + $1170 | 0;\n  $1240 = ($1236 << 9 | $1236 >>> 23) ^ $1200;\n  $1241 = $1240 + $1235 | 0;\n  $1245 = ($1241 << 13 | $1241 >>> 19) ^ $1135;\n  $1246 = $1245 + $1240 | 0;\n  $1250 = ($1246 << 18 | $1246 >>> 14) ^ $1170;\n  $1251 = $1190 + $1155 | 0;\n  $1255 = ($1251 << 7 | $1251 >>> 25) ^ $1205;\n  $1256 = $1255 + $1190 | 0;\n  $1260 = ($1256 << 9 | $1256 >>> 23) ^ $1140;\n  $1261 = $1260 + $1255 | 0;\n  $1265 = ($1261 << 13 | $1261 >>> 19) ^ $1155;\n  $1266 = $1265 + $1260 | 0;\n  $1270 = ($1266 << 18 | $1266 >>> 14) ^ $1190;\n  $1271 = $1210 + $1175 | 0;\n  $1275 = ($1271 << 7 | $1271 >>> 25) ^ $1145;\n  $1276 = $1275 + $1210 | 0;\n  $1280 = ($1276 << 9 | $1276 >>> 23) ^ $1160;\n  $1281 = $1280 + $1275 | 0;\n  $1285 = ($1281 << 13 | $1281 >>> 19) ^ $1175;\n  $1286 = $1285 + $1280 | 0;\n  $1290 = ($1286 << 18 | $1286 >>> 14) ^ $1210;\n  $1291 = $1230 + $1275 | 0;\n  $1295 = ($1291 << 7 | $1291 >>> 25) ^ $1245;\n  $1296 = $1295 + $1230 | 0;\n  $1300 = ($1296 << 9 | $1296 >>> 23) ^ $1260;\n  $1301 = $1300 + $1295 | 0;\n  $1305 = ($1301 << 13 | $1301 >>> 19) ^ $1275;\n  $1306 = $1305 + $1300 | 0;\n  $1310 = ($1306 << 18 | $1306 >>> 14) ^ $1230;\n  $1311 = $1250 + $1215 | 0;\n  $1315 = ($1311 << 7 | $1311 >>> 25) ^ $1265;\n  $1316 = $1315 + $1250 | 0;\n  $1320 = ($1316 << 9 | $1316 >>> 23) ^ $1280;\n  $1321 = $1320 + $1315 | 0;\n  $1325 = ($1321 << 13 | $1321 >>> 19) ^ $1215;\n  $1326 = $1325 + $1320 | 0;\n  $1330 = ($1326 << 18 | $1326 >>> 14) ^ $1250;\n  $1331 = $1270 + $1235 | 0;\n  $1335 = ($1331 << 7 | $1331 >>> 25) ^ $1285;\n  $1336 = $1335 + $1270 | 0;\n  $1340 = ($1336 << 9 | $1336 >>> 23) ^ $1220;\n  $1341 = $1340 + $1335 | 0;\n  $1345 = ($1341 << 13 | $1341 >>> 19) ^ $1235;\n  $1346 = $1345 + $1340 | 0;\n  $1350 = ($1346 << 18 | $1346 >>> 14) ^ $1270;\n  $1351 = $1290 + $1255 | 0;\n  $1355 = ($1351 << 7 | $1351 >>> 25) ^ $1225;\n  $1356 = $1355 + $1290 | 0;\n  $1360 = ($1356 << 9 | $1356 >>> 23) ^ $1240;\n  $1361 = $1360 + $1355 | 0;\n  $1365 = ($1361 << 13 | $1361 >>> 19) ^ $1255;\n  $1366 = $1365 + $1360 | 0;\n  $1370 = ($1366 << 18 | $1366 >>> 14) ^ $1290;\n  $1371 = $1310 + $1355 | 0;\n  $1375 = ($1371 << 7 | $1371 >>> 25) ^ $1325;\n  $1376 = $1375 + $1310 | 0;\n  $1380 = ($1376 << 9 | $1376 >>> 23) ^ $1340;\n  $1381 = $1380 + $1375 | 0;\n  $1385 = ($1381 << 13 | $1381 >>> 19) ^ $1355;\n  $1386 = $1385 + $1380 | 0;\n  $1391 = $1330 + $1295 | 0;\n  $1395 = ($1391 << 7 | $1391 >>> 25) ^ $1345;\n  $1396 = $1395 + $1330 | 0;\n  $1400 = ($1396 << 9 | $1396 >>> 23) ^ $1360;\n  $1401 = $1400 + $1395 | 0;\n  $1405 = ($1401 << 13 | $1401 >>> 19) ^ $1295;\n  $1406 = $1405 + $1400 | 0;\n  $1411 = $1350 + $1315 | 0;\n  $1415 = ($1411 << 7 | $1411 >>> 25) ^ $1365;\n  $1416 = $1415 + $1350 | 0;\n  $1420 = ($1416 << 9 | $1416 >>> 23) ^ $1300;\n  $1421 = $1420 + $1415 | 0;\n  $1425 = ($1421 << 13 | $1421 >>> 19) ^ $1315;\n  $1426 = $1425 + $1420 | 0;\n  $1431 = $1370 + $1335 | 0;\n  $1435 = ($1431 << 7 | $1431 >>> 25) ^ $1305;\n  $1436 = $1435 + $1370 | 0;\n  $1440 = ($1436 << 9 | $1436 >>> 23) ^ $1320;\n  $1441 = $1440 + $1435 | 0;\n  $1445 = ($1441 << 13 | $1441 >>> 19) ^ $1335;\n  $1446 = $1445 + $1440 | 0;\n  $$016081639 = (($1386 << 18 | $1386 >>> 14) ^ $1310) + $765 | 0;\n  $$016091638 = $1375 + $768 | 0;\n  $$016101637 = $1380 + $771 | 0;\n  $$016111636 = $1385 + $774 | 0;\n  $$016121635 = $1405 + $777 | 0;\n  $$016131634 = (($1406 << 18 | $1406 >>> 14) ^ $1330) + $780 | 0;\n  $$016141633 = $1395 + $783 | 0;\n  $$016151632 = $1400 + $786 | 0;\n  $$016161631 = $1420 + $789 | 0;\n  $$016171630 = $1425 + $792 | 0;\n  $$016181629 = (($1426 << 18 | $1426 >>> 14) ^ $1350) + $795 | 0;\n  $$016191628 = $1415 + $798 | 0;\n  $$016201627 = $1435 + $801 | 0;\n  $$016211626 = $1440 + $804 | 0;\n  $$016221625 = $1445 + $807 | 0;\n  $$016231624 = (($1446 << 18 | $1446 >>> 14) ^ $1370) + $810 | 0;\n  $1468 = $1 + ($745 + $39 << 2) | 0;\n  HEAP32[$1468 >> 2] = $$016081639;\n  HEAP32[$1468 + 4 >> 2] = $$016091638;\n  HEAP32[$1468 + 8 >> 2] = $$016101637;\n  HEAP32[$1468 + 12 >> 2] = $$016111636;\n  HEAP32[$1468 + 16 >> 2] = $$016121635;\n  HEAP32[$1468 + 20 >> 2] = $$016131634;\n  HEAP32[$1468 + 24 >> 2] = $$016141633;\n  HEAP32[$1468 + 28 >> 2] = $$016151632;\n  HEAP32[$1468 + 32 >> 2] = $$016161631;\n  HEAP32[$1468 + 36 >> 2] = $$016171630;\n  HEAP32[$1468 + 40 >> 2] = $$016181629;\n  HEAP32[$1468 + 44 >> 2] = $$016191628;\n  HEAP32[$1468 + 48 >> 2] = $$016201627;\n  HEAP32[$1468 + 52 >> 2] = $$016211626;\n  HEAP32[$1468 + 56 >> 2] = $$016221625;\n  HEAP32[$1468 + 60 >> 2] = $$016231624;\n  $$01640 = $$01640 + 2 | 0;\n } while ($$01640 >>> 0 < $3 >>> 0);\n return;\n}\n\n\t\treturn {\n_SMix: _SMix\n\t\t};\n\t}\n\n\t\n\tfunction create(buffer) {\n\t\treturn asm(self, {}, buffer);\n\t}\n\n\n\tfunction getHeap() {\n\t\treturn 8200;\n\t}\n\n\treturn {\n\t\tcreate: create,\n\t\tgetHeap: getHeap\n\t};\n};\n","\nfunction asm_pbkdf2() {\n\t'use strict';\n\n\tvar asm = function(global, env, buffer) {\n\t\t'use asm';\n\n\t\tvar\nHEAP32 = new global.Int32Array(buffer),\nHEAP8 = new global.Int8Array(buffer),\nHEAPU8 = new global.Uint8Array(buffer);\n\nfunction _PBKDF2_OneIter($0, $1, $2, $3, $4, $5) {\n $0 = $0 | 0;\n $1 = $1 | 0;\n $2 = $2 | 0;\n $3 = $3 | 0;\n $4 = $4 | 0;\n $5 = $5 | 0;\n var $$01$i = 0, $$025$i$i = 0, $$026$i$i = 0, $$pr$i$i = 0, $16 = 0, $29 = 0, $43 = 0, $44 = 0, dest = 0, src = 0, stop = 0;\n if ($1 >>> 0 > 64) {\n  HEAP32[191] = 0;\n  HEAP32[183] = 1779033703;\n  HEAP32[184] = -1150833019;\n  HEAP32[185] = 1013904242;\n  HEAP32[186] = -1521486534;\n  HEAP32[187] = 1359893119;\n  HEAP32[188] = -1694144372;\n  HEAP32[189] = 528734635;\n  HEAP32[190] = 1541459225;\n  _SHA256_Update(732, $0, $1);\n  _SHA256_Final(1816, 732);\n  $$025$i$i = 1816;\n  $$026$i$i = 32;\n } else {\n  $$025$i$i = $0;\n  $$026$i$i = $1;\n }\n HEAP32[191] = 0;\n HEAP32[183] = 1779033703;\n HEAP32[184] = -1150833019;\n HEAP32[185] = 1013904242;\n HEAP32[186] = -1521486534;\n HEAP32[187] = 1359893119;\n HEAP32[188] = -1694144372;\n HEAP32[189] = 528734635;\n HEAP32[190] = 1541459225;\n dest = 1752;\n stop = dest + 64 | 0;\n do {\n  HEAP8[dest >> 0] = 54;\n  dest = dest + 1 | 0;\n } while ((dest | 0) < (stop | 0));\n if (!$$026$i$i) $$pr$i$i = 1; else {\n  HEAP8[1752] = HEAP8[$$025$i$i >> 0] ^ 54;\n  if (($$026$i$i | 0) == 1) $$pr$i$i = 0; else {\n   HEAP8[1753] = HEAP8[$$025$i$i + 1 >> 0] ^ 54;\n   if (($$026$i$i | 0) == 2) $$pr$i$i = 0; else {\n    HEAP8[1754] = HEAP8[$$025$i$i + 2 >> 0] ^ 54;\n    if (($$026$i$i | 0) == 3) $$pr$i$i = 0; else {\n     $16 = 3;\n     do {\n      HEAP8[1752 + $16 >> 0] = HEAP8[$$025$i$i + $16 >> 0] ^ HEAP8[1752 + $16 >> 0];\n      $16 = $16 + 1 | 0;\n     } while (($16 | 0) != ($$026$i$i | 0));\n     $$pr$i$i = 0;\n    }\n   }\n  }\n }\n _SHA256_Update(732, 1752, 64);\n HEAP32[216] = 0;\n HEAP32[208] = 1779033703;\n HEAP32[209] = -1150833019;\n HEAP32[210] = 1013904242;\n HEAP32[211] = -1521486534;\n HEAP32[212] = 1359893119;\n HEAP32[213] = -1694144372;\n HEAP32[214] = 528734635;\n HEAP32[215] = 1541459225;\n dest = 1752;\n stop = dest + 64 | 0;\n do {\n  HEAP8[dest >> 0] = 92;\n  dest = dest + 1 | 0;\n } while ((dest | 0) < (stop | 0));\n if (!$$pr$i$i) {\n  HEAP8[1752] = HEAP8[$$025$i$i >> 0] ^ 92;\n  if (($$026$i$i | 0) != 1) {\n   HEAP8[1753] = HEAP8[$$025$i$i + 1 >> 0] ^ 92;\n   if (($$026$i$i | 0) != 2) {\n    HEAP8[1754] = HEAP8[$$025$i$i + 2 >> 0] ^ 92;\n    if (($$026$i$i | 0) != 3) {\n     $29 = 3;\n     do {\n      HEAP8[1752 + $29 >> 0] = HEAP8[$$025$i$i + $29 >> 0] ^ HEAP8[1752 + $29 >> 0];\n      $29 = $29 + 1 | 0;\n     } while (($29 | 0) != ($$026$i$i | 0));\n    }\n   }\n  }\n }\n _SHA256_Update(832, 1752, 64);\n _SHA256_Update(732, $2, $3);\n if ($5 | 0) {\n  $$01$i = 0;\n  $44 = 0;\n  do {\n   $$01$i = $$01$i + 1 | 0;\n   HEAP8[1687] = $$01$i;\n   HEAP8[1686] = $$01$i >>> 8;\n   HEAP8[1685] = $$01$i >>> 16;\n   HEAP8[1684] = $$01$i >>> 24;\n   _memcpy(932, 732, 200) | 0;\n   _SHA256_Update(932, 1684, 4);\n   _SHA256_Final(1848, 932);\n   _SHA256_Update(1032, 1848, 32);\n   _SHA256_Final(1688, 1032);\n   dest = 1720;\n   src = 1688;\n   stop = dest + 32 | 0;\n   do {\n    HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;\n    dest = dest + 1 | 0;\n    src = src + 1 | 0;\n   } while ((dest | 0) < (stop | 0));\n   $43 = $5 - $44 | 0;\n   _memcpy($4 + $44 | 0, 1720, ($43 >>> 0 > 32 ? 32 : $43) | 0) | 0;\n   $44 = $$01$i << 5;\n  } while ($44 >>> 0 < $5 >>> 0);\n }\n return;\n}\nfunction _SHA256_Update($0, $1, $2) {\n $0 = $0 | 0;\n $1 = $1 | 0;\n $2 = $2 | 0;\n var $$0$lcssa = 0, $$027$lcssa = 0, $$02728 = 0, $$029 = 0, $10 = 0, $12 = 0, $13 = 0, $14 = 0, $15 = 0, $18 = 0, $19 = 0, $21 = 0, $4 = 0, $5 = 0, $7 = 0;\n do if ($2 | 0) {\n  $4 = $0 + 32 | 0;\n  $5 = HEAP32[$4 >> 2] | 0;\n  $7 = $5 >>> 3 & 63;\n  HEAP32[$4 >> 2] = $5 + ($2 << 3);\n  $10 = 64 - $7 | 0;\n  $12 = $0 + 36 + $7 | 0;\n  if ($10 >>> 0 > $2 >>> 0) {\n   _memcpy($12 | 0, $1 | 0, $2 | 0) | 0;\n   break;\n  }\n  _memcpy($12 | 0, $1 | 0, $10 | 0) | 0;\n  $13 = $0 + 36 | 0;\n  _SHA256_Transform($0, $13);\n  $14 = $1 + $10 | 0;\n  $15 = $2 - $10 | 0;\n  if ($15 >>> 0 > 63) {\n   $18 = $7 + $2 + -128 | 0;\n   $19 = $18 & -64;\n   $21 = $19 + 128 - $7 | 0;\n   $$02728 = $15;\n   $$029 = $14;\n   while (1) {\n    _SHA256_Transform($0, $$029);\n    $$02728 = $$02728 + -64 | 0;\n    if ($$02728 >>> 0 <= 63) break; else $$029 = $$029 + 64 | 0;\n   }\n   $$0$lcssa = $1 + $21 | 0;\n   $$027$lcssa = $18 - $19 | 0;\n  } else {\n   $$0$lcssa = $14;\n   $$027$lcssa = $15;\n  }\n  _memcpy($13 | 0, $$0$lcssa | 0, $$027$lcssa | 0) | 0;\n } while (0);\n return;\n}\nfunction _memcpy(dest, src, num) {\n dest = dest | 0;\n src = src | 0;\n num = num | 0;\n var ret = 0;\n\n ret = dest | 0;\n if ((dest & 3) == (src & 3)) {\n  while (dest & 3) {\n   if (!num) return ret | 0;\n   HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;\n   dest = dest + 1 | 0;\n   src = src + 1 | 0;\n   num = num - 1 | 0;\n  }\n  while ((num | 0) >= 4) {\n   HEAP32[dest >> 2] = HEAP32[src >> 2];\n   dest = dest + 4 | 0;\n   src = src + 4 | 0;\n   num = num - 4 | 0;\n  }\n }\n while ((num | 0) > 0) {\n  HEAP8[dest >> 0] = HEAP8[src >> 0] | 0;\n  dest = dest + 1 | 0;\n  src = src + 1 | 0;\n  num = num - 1 | 0;\n }\n return ret | 0;\n}\nfunction _SHA256_Transform($0, $1) {\n $0 = $0 | 0;\n $1 = $1 | 0;\n var $$01$i = 0, $$059 = 0, $$158 = 0, $$257 = 0, $112 = 0, $116 = 0, $123 = 0, $131 = 0, $25 = 0, $3 = 0, $51 = 0, $58 = 0, $63 = 0, $82 = 0, $93 = 0, $97 = 0, $51$looptemp = 0;\n $$01$i = 0;\n do {\n  $3 = $1 + ($$01$i << 2) | 0;\n  HEAP32[444 + ($$01$i << 2) >> 2] = (HEAPU8[$3 + 2 >> 0] | 0) << 8 | (HEAPU8[$3 + 3 >> 0] | 0) | (HEAPU8[$3 + 1 >> 0] | 0) << 16 | (HEAPU8[$3 >> 0] | 0) << 24;\n  $$01$i = $$01$i + 1 | 0;\n } while (($$01$i | 0) != 16);\n $$059 = 16;\n $51 = HEAP32[111] | 0;\n do {\n  $25 = HEAP32[444 + ($$059 + -2 << 2) >> 2] | 0;\n  $51$looptemp = $51;\n  $51 = HEAP32[444 + ($$059 + -15 << 2) >> 2] | 0;\n  HEAP32[444 + ($$059 << 2) >> 2] = $51$looptemp + (HEAP32[444 + ($$059 + -7 << 2) >> 2] | 0) + (($25 >>> 19 | $25 << 13) ^ $25 >>> 10 ^ ($25 >>> 17 | $25 << 15)) + (($51 >>> 18 | $51 << 14) ^ $51 >>> 3 ^ ($51 >>> 7 | $51 << 25));\n  $$059 = $$059 + 1 | 0;\n } while (($$059 | 0) != 64);\n HEAP32[175] = HEAP32[$0 >> 2];\n HEAP32[176] = HEAP32[$0 + 4 >> 2];\n HEAP32[177] = HEAP32[$0 + 8 >> 2];\n HEAP32[178] = HEAP32[$0 + 12 >> 2];\n HEAP32[179] = HEAP32[$0 + 16 >> 2];\n HEAP32[180] = HEAP32[$0 + 20 >> 2];\n HEAP32[181] = HEAP32[$0 + 24 >> 2];\n HEAP32[182] = HEAP32[$0 + 28 >> 2];\n $$158 = 0;\n do {\n  $58 = 700 + (((71 - $$158 | 0) % 8 | 0) << 2) | 0;\n  $63 = HEAP32[700 + (((68 - $$158 | 0) % 8 | 0) << 2) >> 2] | 0;\n  $82 = HEAP32[700 + (((70 - $$158 | 0) % 8 | 0) << 2) >> 2] | 0;\n  $93 = (HEAP32[444 + ($$158 << 2) >> 2] | 0) + (HEAP32[$58 >> 2] | 0) + (($63 >>> 6 | $63 << 26) ^ ($63 >>> 11 | $63 << 21) ^ ($63 >>> 25 | $63 << 7)) + (HEAP32[8 + ($$158 << 2) >> 2] | 0) + (($82 ^ HEAP32[700 + (((69 - $$158 | 0) % 8 | 0) << 2) >> 2]) & $63 ^ $82) | 0;\n  $97 = HEAP32[700 + (((64 - $$158 | 0) % 8 | 0) << 2) >> 2] | 0;\n  $112 = HEAP32[700 + (((65 - $$158 | 0) % 8 | 0) << 2) >> 2] | 0;\n  $116 = HEAP32[700 + (((66 - $$158 | 0) % 8 | 0) << 2) >> 2] | 0;\n  $123 = 700 + (((67 - $$158 | 0) % 8 | 0) << 2) | 0;\n  HEAP32[$123 >> 2] = (HEAP32[$123 >> 2] | 0) + $93;\n  HEAP32[$58 >> 2] = (($97 >>> 2 | $97 << 30) ^ ($97 >>> 13 | $97 << 19) ^ ($97 >>> 22 | $97 << 10)) + $93 + (($116 | $112) & $97 | $116 & $112);\n  $$158 = $$158 + 1 | 0;\n } while (($$158 | 0) != 64);\n $$257 = 0;\n do {\n  $131 = $0 + ($$257 << 2) | 0;\n  HEAP32[$131 >> 2] = (HEAP32[$131 >> 2] | 0) + (HEAP32[700 + ($$257 << 2) >> 2] | 0);\n  $$257 = $$257 + 1 | 0;\n } while (($$257 | 0) != 8);\n return;\n}\nfunction _SHA256_Final($0, $1) {\n $0 = $0 | 0;\n $1 = $1 | 0;\n var $$01$i = 0, $12 = 0, $16 = 0, $18 = 0, $3 = 0;\n $3 = HEAP32[$1 + 32 >> 2] | 0;\n HEAP8[1139] = $3;\n HEAP8[1138] = $3 >>> 8;\n HEAP8[1137] = $3 >>> 16;\n HEAP8[1136] = $3 >>> 24;\n $12 = $3 >>> 3 & 63;\n HEAP32[283] = 0;\n _SHA256_Update($1, 380, ($12 >>> 0 < 56 ? 56 : 120) - $12 | 0);\n _SHA256_Update($1, 1132, 8);\n $$01$i = 0;\n do {\n  $16 = $0 + ($$01$i << 2) | 0;\n  $18 = HEAP32[$1 + ($$01$i << 2) >> 2] | 0;\n  HEAP8[$16 + 3 >> 0] = $18;\n  HEAP8[$16 + 2 >> 0] = $18 >>> 8;\n  HEAP8[$16 + 1 >> 0] = $18 >>> 16;\n  HEAP8[$16 >> 0] = $18 >>> 24;\n  $$01$i = $$01$i + 1 | 0;\n } while (($$01$i | 0) != 8);\n return;\n}\n\n\t\treturn {\n_PBKDF2_OneIter: _PBKDF2_OneIter\n\t\t};\n\t}\n\n\t\n\tfunction create(buffer) {\n\t\tvar arr = new Uint8Array(buffer);\n\t\tvar bin = atob('mC+KQpFEN3HP+8C1pdu16VvCVjnxEfFZpII/ktVeHKuYqgfYAVuDEr6FMSTDfQxVdF2+cv6x3oCnBtybdPGbwcFpm+SGR77vxp3BD8yhDCRvLOktqoR0StypsFzaiPl2UlE+mG3GMajIJwOwx39Zv/ML4MZHkafVUWPKBmcpKRSFCrcnOCEbLvxtLE0TDThTVHMKZbsKanYuycKBhSxykqHov6JLZhqocItLwqNRbMcZ6JLRJAaZ1oU1DvRwoGoQFsGkGQhsNx5Md0gntbywNLMMHDlKqthOT8qcW/NvLmjugo90b2OleBR4yIQIAseM+v++kOtsUKT3o/m+8nhxxgUAAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAACAAAAYAcAAAAEAAAAAAAAAAAAAAEAAAAAAAAAAAAAAAAAAAr/////AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAQAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==');\n\t\tvar base = 8;\n\n\t\tfor (var i = 0; i < bin.length; i++) {\n\t\t\tarr[base + i] = bin.charCodeAt(i);\n\t\t}\n\n\t\treturn asm(self, {}, buffer);\n\t}\n\n\n\tfunction getHeap() {\n\t\treturn 8636;\n\t}\n\n\treturn {\n\t\tcreate: create,\n\t\tgetHeap: getHeap\n\t};\n};\n","///<reference path=\"../lib/smix.js\"/>\n\n\nconst Child = function() {\n    'use strict';\n\n    const enum CONST {\n        INIT_ITER = 262144,\n        INTERVAL = 100,\n        STAGE2_RATE = 0.7,\n    };\n\n\n    let mPtrB = 64,\n        mPtrXYV: number,\n        mBlockSize: number,\n        mArgN: number,\n        mArgR: number,\n\n        mAsmBuf: ArrayBuffer,\n//        mAsmU32: Uint32Array,\n        mAsmU8: Uint8Array,\n        mAsmMod = asm_smix(),\n\n        mAsmObj = null,\n\n        mProgPos: number,\n        mProgStep: number,\n        mFirstStage: boolean;\n\n\n    // Worker's postMessage\n    const postMessage = <any> self.postMessage;\n    const getTick = Date.now;\n\n\n    function prehot() {\n        // test data\n        // let s1 = mPtrB >> 2;\n        // let s2 = mPtrB + mBlockSize >> 2;\n        // let k = getTick();\n\n        // for (let i = s1; i < s2; i++) {\n        //     k = (k * 13) >>> 0;\n        //     mAsmU32[i] = k;\n        // }\n\n        // first run\n        // mAsmObj._SMix(mArgN, mArgR, mPtrB, mPtrXYV, 0, 0, 8192);\n        // mAsmObj._SMix(mArgN, mArgR, mPtrB, mPtrXYV, 1, 0, 8192);\n    }\n\n\n    function config(N: number, r: number) {\n        mArgN = N;\n        mArgR = r;\n        mBlockSize = 128 * r;\n        mPtrXYV = mPtrB + mBlockSize;\n\n        let size = mPtrB + mBlockSize * (3 + N);\n\n        // 空间必须是 16M 的整数倍\n        let need = Math.ceil(size / 16777216) * 16777216;\n\n        if (!mAsmBuf || mAsmBuf.byteLength < need) {\n            try {\n                mAsmBuf = new ArrayBuffer(need);\n            } catch (err) {\n                return false;\n            }\n            // mAsmU32 = new Uint32Array(mAsmBuf);\n            mAsmU8 = new Uint8Array(mAsmBuf);\n\n            // create instance\n            mAsmObj = mAsmMod.create(mAsmBuf);\n            prehot();\n        }\n        return true;\n    }\n\n\n    function start(input: ArrayBuffer) {\n        let buf = new Uint8Array(input);\n        mAsmU8.set(buf, mPtrB);\n\n        mProgStep = CONST.INIT_ITER / mArgR;\n        mProgPos = 0;\n        mFirstStage = true;\n    }\n\n\n    function setRate(p: number) {\n        // 保持为 2 的倍数\n        mProgStep = (mProgStep * p >> 1) << 1;\n    }\n\n    function advance() {\n        let stp = mProgStep;\n        let beg = mProgPos;\n        let end = beg + stp;\n        let last = 0;\n        let t;\n\n        if (end >= mArgN) {\n            end = mArgN;\n            stp = end - beg;\n            last = mFirstStage ? 1 : 2;\n        }\n\n        if (last != 2) {\n            // 在计算前通知主线程，并发布下一个任务，减少消息通信的间隔\n            postMessage(stp);\n        }\n\n        if (last == 0) {\n            t = getTick();\n        }\n        mAsmObj._SMix(mArgN, mArgR, mPtrB, mPtrXYV, mFirstStage ? 0 : 1, beg, end);\n\n        switch (last) {\n        case 0:\n            t = getTick() - t;\n            mProgPos = end;\n\n            // 根据当前的计算速度，调整下一次的迭代次数\n            // 使计算时间保持在 INTERVAL ms 左右\n            setRate(CONST.INTERVAL / t);\n            break;\n\n        case 1:\n            mProgPos = 0;\n            mFirstStage = false;\n            // SMix 第二步的迭代耗时更大\n            setRate(CONST.STAGE2_RATE);\n            break;\n\n        case 2:\n            // complete notify\n            let output = mAsmBuf.slice(mPtrB, mPtrB + mBlockSize);\n            postMessage({\n                state: 'done',\n                step: stp,\n                output: output,\n            }, [output]);\n            break;\n        }\n    }\n\n\n    function onMessage(e: MessageEvent) {\n        let msg = e.data;\n\n        // fast case\n        if (msg === true) {\n            advance();\n            return;\n        }\n\n        switch (msg.cmd) {\n        // case 'advance':\n        //     advance();\n        //     break;\n\n        case 'task':\n            start(msg.input);\n            advance();\n            break;\n\n        case 'config':\n            let success = config(msg.N, msg.r);\n            postMessage({\n                state: success ? 'ready' : 'fail',\n            });\n            break;\n\n        case 'free':\n            mAsmObj = mAsmU8 = mAsmBuf = null;\n            break;\n        }\n    }\n\n    addEventListener('message', onMessage);\n};\n","///<reference path=\"WorkerChild.ts\"/>\n///<reference path=\"../lib/pbkdf2.js\"/>\n///<reference path=\"../lib/smix.js\"/>\n\nmodule WorkerMain {\n    let maxPassLen = 64,\n    maxSaltLen = 64,\n    maxDkLen = 64,\n    maxThread = 4;\n\n    export let onready: () => void;\n    export let onerror: (string) => void;\n    export let oncomplete: (dkHex: Uint8Array) => void;\n\n    let mArgP: number,\n        mWorkerUrl: string,\n\n        mAsmBuf: ArrayBuffer,\n        mAsmU8: Uint8Array,\n        mAsmMod = asm_pbkdf2(),\n\n        // 利用类型推导机制，获取 asm.js 模块的实例类型\n        mAsmObj =  null,\n\n        mPassPtr: number,\n        mSaltPtr: number,\n        mDkPtr: number,\n        mBlksPtr: number,\n\n        mPassLen: number,\n        mSaltLen: number,\n        mDkLen: number,\n        mBlkLen: number,\n\n        mThreads: number,\n        mWorkerPool: Worker[] = [],\n\n        mReadyCounter: number,\n        mDoingCounter: number,\n        mDoneCounter: number;\n\n\n    export function config(N: number, r: number, P: number, thread: number) {\n        if (thread == null) {\n            let taskPerThread = Math.ceil(P / maxThread);\n            thread = Math.ceil(P / taskPerThread);\n        }\n        mBlkLen = 128 * r;\n        mArgP = P;\n\n        mThreads = thread;\n        mReadyCounter = 0;\n\n        // pbkdf2 memory alloc\n        let ptr = mAsmMod.getHeap();\n\n        mPassPtr = ptr;\n        ptr += maxPassLen;\n\n        mSaltPtr = ptr;\n        ptr += maxSaltLen;\n\n        mDkPtr = ptr;\n        ptr += maxDkLen;\n\n        mBlksPtr = ptr;\n        ptr += (mBlkLen * P);\n\n        ptr = Math.ceil(ptr / 65536) * 65536;\n\n        // init asm.js module\n        if (!mAsmBuf || mAsmBuf.byteLength < ptr) {\n            mAsmBuf = new ArrayBuffer(ptr);\n            mAsmU8 = new Uint8Array(mAsmBuf);\n            mAsmObj = mAsmMod.create(mAsmBuf);\n        }\n\n        if (!mWorkerUrl) {\n            mWorkerUrl = createWorkerUrl();\n        }\n\n        for (let i = 0; i < mThreads; i++) {\n            let worker = mWorkerPool[i];\n            if (!worker) {\n                worker = new Worker(mWorkerUrl);\n                worker.onmessage = msgHander;\n                worker['tag'] = 0;\n                mWorkerPool[i] = worker;\n            }\n            worker.postMessage({\n                cmd: 'config',\n                N: N,\n                r: r,\n            });\n        }\n    }\n\n    export function hash(passBin: Uint8Array, saltBin: Uint8Array, dkLen: number) {\n        mAsmU8.set(passBin, mPassPtr);\n        mAsmU8.set(saltBin, mSaltPtr);\n\n        mPassLen = passBin.length;\n        mSaltLen = saltBin.length;\n        mDkLen = dkLen || maxDkLen;\n\n        mDoingCounter = 0;\n        mDoneCounter = 0;\n\n        // [B0, B1, ..., Bp] <- PBKDF2(pass, salt)\n        mAsmObj._PBKDF2_OneIter(\n            mPassPtr, mPassLen,\n            mSaltPtr, mSaltLen,\n            mBlksPtr, mBlkLen * mArgP\n        );\n\n        for (let i = 0; i < mThreads; i++) {\n            task(mWorkerPool[i]);\n        }\n    }\n\n    export function free() {\n        mWorkerPool.forEach(w => {\n            w.postMessage({\n                cmd: 'free'\n            });\n        });\n    }\n\n    export function unload() {\n        mWorkerPool.forEach(w => {\n            w.terminate();\n        });\n        mWorkerPool = [];\n        mAsmBuf = mAsmU8 = mAsmMod = null;\n        URL.revokeObjectURL(mWorkerUrl);\n    }\n\n    function createWorkerUrl() {\n        /**\n         CODE GEN：\n           (function Child(..) {\n              ...\n           })();\n           function asm_smix() {\n              ...\n           }\n         */\n        let code = '(' + Child + ')();' + asm_smix;\n\n        let blob = new Blob([code], {\n            type: 'text/javascript'\n        });\n\n        return URL.createObjectURL(blob);\n    }\n\n    function complete() {\n        // final hash\n        mAsmObj._PBKDF2_OneIter(\n            mPassPtr, mPassLen,\n            mBlksPtr, mBlkLen * mArgP,\n            mDkPtr, mDkLen > 32 ? mDkLen : 32\n        );\n\n        // pass reference\n        let dkBin = new Uint8Array(mAsmBuf, mDkPtr, mDkLen);\n        oncomplete(dkBin);\n    }\n\n    function msgHander(e: MessageEvent) {\n        let worker: Worker = this;\n        let msg = e.data;\n\n        // fast case\n        if (typeof msg == 'number') {\n            worker.postMessage(true);\n            return;\n        }\n\n        switch (msg.state) {\n        case 'done':\n            // Bi -> B'i\n            let buf = new Uint8Array(msg.output);\n            let id = worker['tag'];\n            mAsmU8.set(buf, mBlksPtr + mBlkLen * id);\n\n            if (++mDoneCounter == mArgP) {\n                complete();\n            } else if (mDoingCounter < mArgP) {\n                task(worker);\n            }\n            break;\n\n        case 'ready':\n            if (++mReadyCounter == mThreads) {\n                onready();\n            }\n            break;\n\n        case 'fail':\n            onerror('memory alloc fail');\n            break;\n        }\n    }\n\n    function task(worker: Worker) {\n        let ptrBi = mBlksPtr + mDoingCounter * mBlkLen;\n        let bufBi = mAsmBuf.slice(ptrBi, ptrBi + mBlkLen);\n\n        worker['tag'] = mDoingCounter++;\n        worker.postMessage({\n            cmd: 'task',\n            input: bufBi,\n        }, [bufBi]); // no copy\n    }\n}\n"]}